{"version":3,"sources":["components/button.js","components/Input.js","components/calculator.js","components/clear.js","App.js","reportWebVitals.js","index.js"],"names":["Button","className","onClick","props","handleClick","children","this","Component","Input","input","Clear","handleClear","App","addToInput","val","setState","state","clearInput","multiply","previousNumber","operator","divide","add","subtract","evaluate","currentNumber","parseInt","decimal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48a4083a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './button.css';\n\nclass Button extends Component{\n  render() {\n    return (\n      <div\n      className='button'\n      onClick={() => this.props.handleClick(this.props.children)}>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Button;\n","import React from 'react';\nimport './Input.css';\n\nconst Input = (props) => {\n  return (\n    <div className='above'>\n      <p> {props.input} </p>\n    </div>\n  )\n}\n\nexport default Input;\n","import React, {Component} from 'react';\nimport Button from './button';\nimport \"./calculator.css\";\n\nclass Calculator extends Component {\n  render() {\n    return (\n      <div>\n        <h1> My First Calculator </h1>\n        <div className>\n          <Button> 10 </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from 'react';\nimport './clear.css';\n\nconst Clear = (props) => {\n  return (\n    <div\n    className='clear'\n    onClick={() => props.handleClear(props.children)}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Clear;\n","import React, {Component} from 'react';\nimport Calculator from './components/calculator';\nimport Button from './components/button';\nimport Input from './components/Input';\nimport Clear from './components/clear';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\"\n    };\n    //this.addToInput = this.addToInput.bind(this)\n  }\n  addToInput = (val) => {\n    this.setState({input: this.state.input + val});\n  }\n\n  clearInput = () => {\n    this.setState({input: ''})\n  }\n\n  multiply = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({input: ''});\n    this.state.operator = 'multiply'\n  }\n\n  divide = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({input: ''});\n    this.state.operator = 'divide'\n  }\n\n  add = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({input: ''})\n    this.state.operator = 'add'\n  }\n\n  subtract = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({input: ''})\n    this.state.operator = 'subtract'\n  }\n\n  evaluate = () => {\n    this.state.currentNumber = this.state.input;\n\n    if (this.state.operator == 'multiply') {\n      this.setState ({\n        input:\n        parseInt(this.state.previousNumber) *\n        parseInt(this.state.currentNumber)\n      })\n    }\n    else if (this.state.operator == 'divide') {\n      this.setState({\n        input:\n        parseInt(this.state.previousNumber) /\n        parseInt(this.state.currentNumber)\n      })\n    }\n    else if (this.state.operator == 'add') {\n      this.setState({\n        input:\n        parseInt(this.state.previousNumber) +\n        parseInt(this.state.currentNumber)\n      })\n    }\n    else if (this.state.operator == 'subtract') {\n      this.setState({\n        input:\n        parseInt(this.previousNumber) -\n        parseInt(this.currentNumber)\n      })\n    }\n  }\n\n  render() {\n  return (\n    <div className='App'>\n    <div className='calc-wrapper'>\n    <div>\n      <Input input={this.state.input}> {this.state.input}</Input>\n    </div>\n      <div className=\"row\">\n          <Button handleClick={this.addToInput}> 7 </Button>\n          <Button handleClick={this.addToInput}> 8 </Button>\n          <Button handleClick={this.addToInput}> 9 </Button>\n          <Button handleClick={this.multiply}> * </Button>\n      </div>\n      <div className=\"row\">\n          <Button handleClick={this.addToInput}> 4 </Button>\n          <Button handleClick={this.addToInput}> 5 </Button>\n          <Button handleClick={this.addToInput}> 6 </Button>\n          <Button handleClick={this.subtract}> - </Button>\n      </div>\n      <div className=\"row\">\n          <Button handleClick={this.addToInput}> 1 </Button>\n          <Button handleClick={this.addToInput}> 2 </Button>\n          <Button handleClick={this.addToInput}> 3 </Button>\n          <Button handleClick={this.add}> + </Button>\n      </div>\n      <div className=\"row\">\n          <Button handleClick={this.addToInput}> 0 </Button>\n          <Button handleClick={this.divide}> / </Button>\n          <Button handleClick={this.decimal}> . </Button>\n          <Button handleClick={this.evaluate}> = </Button>\n      </div>\n      <Clear handleClear={this.clearInput}> Clear </Clear>\n      \n\n    </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}